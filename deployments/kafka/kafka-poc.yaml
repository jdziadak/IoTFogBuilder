apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  server.properties: |
    listeners=PLAINTEXT://kafka:9092,EXTERNAL://kafka:19092
    advertised.listeners=PLAINTEXT://kafka:9092,EXTERNAL://<EXTERNAL_IP>:19092
    inter.broker.listener.name=PLAINTEXT
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - name: external
      port: 19092
      targetPort: 19092
      protocol: TCP
    - name: internal
      port: 9092
      targetPort: 9092
      protocol: TCP
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.13-2.8.0
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: EXTERNAL://<EXTERNAL_IP>:19092,PLAINTEXT://kafka:9092
        - name: KAFKA_LISTENERS
          value: EXTERNAL://0.0.0.0:19092,PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        ports:
        - name: external
          containerPort: 19092
          protocol: TCP
        - name: internal
          containerPort: 9092
          protocol: TCP
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi